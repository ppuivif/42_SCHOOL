char	*ft_strrchr(const char *s, int c)

->The strrchr() function returns a pointer to the last occurrence of  the character c in the string s.

Here "character" means "byte"; these functions do not work with wide or multibyte characters.

->The strchr() and strrchr() functions return a pointer  to  the  matched
       character  or NULL if the character is not found.  The terminating null
       byte is considered part of the string, so that if  c  is  specified  as
       '\0', these functions return a pointer to the terminator.

->No protection.

#include "libft.h"

char	*ft_strrchr(const char *s, int c)
{
	int		i;
	char	*str;
	char	d;

	str = (char *) s;
	i = ft_strlen(str);
	d = (char) c;
	if (d == 0)
		return (str + i);
	while (i >= 0)
	{
		if ((unsigned char)str[i] == (unsigned char)d)
			return (str + i);
		else
			i--;
	}
	return (0);
}

#include <stdio.h>
#include <string.h>

int	main(int argc, char **argv)
{
	if (argc == 3)
		printf("real_function give :\t%s\n", strrchr(argv[1], argv[2][0]));
	if (argc == 4)
		printf("ft_function give :\t%s\n", ft_strrchr(argv[1], argv[2][0]));
	return (0);
}
