int	ft_toupper(int c)

->This function convert lowercase letters to uppercase, and vice versa.
If  c is a lowercase letter (ascii value of 'a' is 97, ascii value of 'z' is 122), toupper() returns its uppercase equivalent, if an uppercase representation exists in the current locale.  Otherwise, it returns c.  The toupper_l() function performs the same task, but uses the locale referred to by the locale handle locale.

If c is neither an unsigned char value nor EOF, the behavior of these functions is undefined.

The behavior of toupper_l() and tolower_l() is undefined if locale is the special locale object LC_GLOBAL_LOCALE (see duplocale(3)) or is not a valid locale object handle.

->The value returned is that of the converted letter, or c if the conversion was not possible.

->If the argument c is of type char, it must be cast to unsigned char.

int	ft_toupper(int c)
{
	unsigned char	d;

	d = (unsigned char) c;
	if (d >= 97 && d <= 122)
		c = c - 32;
	else
		return (c);
	return (c);
}

#include <ctype.h>
#include <stdlib.h>
#include <stdio.h>

int	main(int argc, char **argv)
{
	if (argc == 2)
		printf("real_function :\t%d\n", toupper(atoi(argv[1])));
	if (argc == 3)
		printf("ft_function :\t%d\n", ft_toupper(atoi(argv[1])));
	return (0);
}
