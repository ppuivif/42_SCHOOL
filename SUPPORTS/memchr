void	*ft_memchr(const void *s, int c, size_t n)

->The  memchr()  function  scans  the  initial n bytes of the memory area pointed to by s for the
       first instance of c.  Both c and the bytes of the memory area pointed to by s  are  interpreted
       as unsigned char.
->The memchr() and memrchr() functions return a pointer to the matching byte or NULL if the character
	does not occur in the given memory area.
->No protection.

#include <stddef.h>

void	*ft_memchr(const void *s, int c, size_t n)
{
	size_t			i;
	unsigned char	*str;
	unsigned char	d;

	i = 0;
	str = (unsigned char *) s;
	d = (unsigned char) c;
	while (i < n)
	{
		if (str[i] == d)
			return (str + i);
		else
			i++;
	}
	return (0);
}

#include <string.h>
#include <stdio.h>
#include <stdlib.h>

int	main(int argc, char **argv)
{
	if (argc == 4)
		printf("real_function give :\t%s\n",
			(char *)memchr(argv[1], atoi(argv[2]), atoi(argv[3])));
	if (argc == 5)
		printf("ft_function give :\t%s\n",
			(char *)ft_memchr(argv[1], atoi(argv[2]), atoi(argv[3])));
	return (0);
}
